scalar Date

type Job {
  id: ID!
  title: String!
  description: String!
  salary: Float!
  experience: Int!
  deadline: Date!
  createdAt: Date!
  updatedAt: Date!
  headcount: Int!
  companyId: ID!
  jobTypeId: ID!
  categoryId: ID
  locationId: ID!
  idDel: Boolean!
  company: Company!
  jobType: JobType!
  category: JobCategory
  location: Location!
}

input JobInput {
  title: String
  description: String
  salary: Float
  experience: Int
  deadline: Date
  headcount: Int
  companyId: ID
  jobTypeId: ID
  categoryId: ID
  locationId: ID
}

input UpdateJobInput {
  title: String
  description: String
  salary: Int
  experience: Int
  deadline: String
  headcount: Int
  jobTypeId: ID
  categoryId: ID
  locationId: ID
}

type Query {
  getJobById(jobId: ID!): Job
  getAllJobs(idDel: Boolean!): [Job!]!
<<<<<<< HEAD
=======
  getJobsWithFilters(Jtitle: String, Jlocation: String, JCategory: String, idDel: Boolean): [Job!]!
>>>>>>> develop
  getMaintainJobsByCompany(companyId: ID!): [Job!]!
}

type Mutation {
  createJob(jobData: JobInput!): Job!
  updateJob(jobId: ID!, jobData: JobInput!): Job
  updateIsDel(jobId: ID!, isDel: Boolean): Job
  deleteJob(jobId: ID!): Boolean!
}

enum E_ApplicationStatus {
  submitted
  under_review
  accepted
  rejected
}

enum E_EvaluationAI {
  none
  priority
  potential
  suitable
  not_suitable
}

type Application {
  _id: ID!
  jobId: ID!
  candidateProfileId: ID!
  selectedCvLink: String!
  status: E_ApplicationStatus!
  appliedAt: Date!
  evaluationAI: E_EvaluationAI
  isDel: Boolean!
  job: Job!
}

type Query {
  getAllApplications: [Application!]!
  getApplicationById(id: ID!): Application
  getApplicationByCandidate(
    candidateProfileId: ID!
    status: E_ApplicationStatus
    page: Int = 1
    limit: Int = 5
  ): PaginatedApplications
}

type PaginatedApplications {
  items: [Application]
  totalItems: Int!
  totalPages: Int!
  currentPage: Int!
}

type Mutation {
  createApplication(application: ApplicationInput!): Application

  updateApplication(
    id: ID!
    jobId: ID
    candidateProfileId: ID
    selectedCvLink: String
    status: E_ApplicationStatus
  ): Application

  deleteApplication(id: ID!): Application
}

input ApplicationInput {
  jobId: ID!
  candidateProfileId: ID!
  selectedCvLink: String!
  evaluationAI: E_EvaluationAI
  status: E_ApplicationStatus
}
